# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: ID!
  name: String!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  users: [User!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Session {
  id: ID!
  userId: ID!
  token: String!
  ipAddress: String!
  userAgent: String!
  startedAt: DateTime!
  endedAt: DateTime
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  user: User
}

type UserAvatar {
  id: ID!
  userId: ID!
  url: String!
  isMain: Boolean!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  user: User
}

type User {
  id: ID!
  peopleInfoId: ID!
  roleId: ID!
  email: String!
  isVerifiedEmail: Boolean!
  googleId: String
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  peopleInfo: PeopleInfo
  role: Role
  sessions: [Session!]
  avatars: [UserAvatar!]
}

type PeopleInfo {
  id: ID!
  name: String!
  paternalSurname: String!
  maternalSurname: String!
  documentTypeId: ID
  documentNumber: String
  birthdate: DateTime!
  genderId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  documentType: Subparameter
  gender: Subparameter!
  users: [User!]!
}

type Subparameter {
  id: ID!
  name: String!
  description: String!
  parameterId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  parameter: Parameter!
  peopleInfoDocumentType: [PeopleInfo!]!
  peopleInfoGender: [PeopleInfo!]!
}

type Parameter {
  id: ID!
  name: String!
  description: String!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  subparameters: [Subparameter!]!
}

type Address {
  id: ID!
  street: String
  city: String!
  state: String!
  country: String!
  zipCode: String
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  users: [User!]
  companies: [Company!]
}

type CompanyAddress {
  id: ID!
  companyId: ID!
  addressId: ID!
  name: String!
  description: String!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  company: Company
  address: Address
  creator: User
  updater: User
}

type CategoryImage {
  id: ID!
  categoryId: ID!
  url: String!

  """Image description text"""
  alt: String!
  isMain: Boolean!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  category: Category
  creator: User
  updater: User
}

type ProductImage {
  id: ID!
  productId: ID!
  url: String!
  alt: String!
  isMain: Boolean!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  product: Product
  creator: User
  updater: User
}

type DiscountProduct {
  """Example field (placeholder)"""
  exampleField: Int!
}

type PromotionImage {
  id: ID!
  promotionRequestId: ID!
  url: String!
  alt: String!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  promotionRequest: PromotionRequest
  creator: User
  updater: User
}

type UserCreditCard {
  id: ID!
  userId: ID!
  creditCardId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  user: User
  creditCard: CreditCard
  creator: User
  updater: User
}

type CreditCard {
  id: ID!
  creditCardTypeId: ID!
  number: String!
  expMonth: String!
  expYear: String!
  cvv: String!
  isMain: Boolean!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creditCardType: Subparameter
  creator: User
  updater: User
  users: [UserCreditCard!]
  promotionPayments: [PromotionPayment!]
}

type PromotionPayment {
  id: ID!
  promotionRequestId: ID!
  paymentMethodId: ID!
  amount: Float!
  creditCardId: ID
  voucher: String
  paymentDate: DateTime!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  promotionRequest: PromotionRequest
  paymentMethod: Subparameter
  creditCard: CreditCard
  creator: User
  updater: User
}

type PromotionStatus {
  id: ID!
  promotionRequestId: ID!
  adminApprovedStatus: Boolean!
  adminApprovedAt: DateTime
  adminApprovedBy: ID
  adminRejectedStatus: Boolean!
  adminRejectedAt: DateTime
  adminRejectedBy: ID
  adminComment: String
  adminReason: String
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  promotionRequest: PromotionRequest
  adminApproved: User
  adminRejected: User
  creator: User
  updater: User
}

type PromotionRequest {
  id: ID!
  requestingUserId: ID!
  companyId: ID!
  title: String!
  code: String!
  description: String!
  promotionTypeId: ID!
  reason: String!
  comment: String!
  promotionStartAt: DateTime!
  promotionEndAt: DateTime!
  inversionAmount: Float!
  currencyId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  requestingUser: User
  company: Company
  promotionType: Subparameter
  currency: Subparameter
  creator: User
  updater: User
  images: [PromotionImage!]
  targetProducts: [PromotionTargetProduct!]
  promotionStatus: [PromotionStatus!]
  promotionPayments: [PromotionPayment!]
  discountProducts: [DiscountProduct!]
}

type PromotionTargetProduct {
  id: ID!
  promotionRequestId: ID!
  productId: ID!
  description: String!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  promotionRequest: PromotionRequest
  product: Product
  creator: User
  updater: User
}

type Product {
  id: ID!
  name: String!
  description: String!
  companyId: ID!
  productTypeId: ID!
  stock: Int!
  price: Float!
  code: String!
  notes: String!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  company: Company
  productType: Subparameter
  creator: User
  updater: User
  images: [ProductImage!]
  categories: [ProductCategory!]
  promotionRequests: [PromotionTargetProduct!]
  discountProducts: [DiscountProduct!]
}

type ProductCategory {
  id: ID!
  productId: ID!
  categoryId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  product: Product
  category: Category
  creator: User
  updater: User
}

type Category {
  id: ID!
  name: String!
  description: String!
  order: Int!
  parentId: ID
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  parent: Category
  children: [Category!]
  creator: User
  updater: User
  images: [CategoryImage!]
  companies: [CompanyCategory!]
  products: [ProductCategory!]
}

type CompanyCategory {
  id: ID!
  companyId: ID!
  categoryId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  company: Company
  category: Category
  creator: User
  updater: User
}

type CompanyLogo {
  id: ID!
  companyId: ID!
  url: String!
  alt: String!
  isMain: Boolean!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  company: Company
  creator: User
  updater: User
}

type Comment {
  id: ID!
  userId: ID!
  reviewId: ID!
  comment: String!
  commentDate: DateTime!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  user: User
  review: Review
  creator: User
  updater: User
}

type CompanyReview {
  id: ID!
  reviewId: ID!
  companyId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  review: Review
  company: Company
  creator: User
  updater: User
}

type Review {
  id: ID!
  userId: ID!
  review: String!
  rating: Int!
  reviewDate: DateTime!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  user: User
  creator: User
  updater: User
  comments: Comment
  promotionReviews: [PromotionReview!]
  companyReviews: [CompanyReview!]
}

type PromotionReview {
  id: ID!
  reviewId: ID!
  promotionId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  review: Review
  promotion: Promotion
  creator: User
  updater: User
}

type Promotion {
  id: ID!
  userId: ID!
  companyId: ID!
  promotionPaymentId: ID!
  promotionRequestId: ID!
  title: String!
  code: String!
  description: String!
  promotionTypeId: ID!
  reason: String!
  comment: String!
  promotionStartAt: DateTime!
  promotionEndAt: DateTime!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  user: User
  company: Company
  promotionType: Subparameter
  promotionRequest: PromotionRequest
  promotionPayment: PromotionPayment
  creator: User
  updater: User
  promotionReviews: [PromotionReview!]
}

type Company {
  id: ID!
  name: String!
  description: String!
  companyTypeId: ID!
  documentTypeId: ID
  documentNumber: String
  website: String
  email: String
  foundedAt: DateTime
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  companyType: Subparameter
  documentType: Subparameter
  creator: User
  updater: User
  logos: [CompanyLogo!]
  phones: [CompanyPhone!]
  addresses: [CompanyAddress!]
  products: [Product!]
  categories: [CompanyCategory!]
  users: [User!]
  promotionRequests: [PromotionRequest!]
  promotions: [Promotion!]
  companies: [CompanyReview!]
}

type CompanyPhone {
  id: ID!
  companyId: ID!
  phoneId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  company: Company
  phone: Phone
  creator: User
  updater: User
}

type Phone {
  id: ID!
  phoneTypeId: ID!
  number: String!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  phoneType: Subparameter
  creator: User
  updater: User
  users: [UserPhone!]
  companies: [CompanyPhone!]
}

type UserPhone {
  id: ID!
  userId: ID!
  phoneId: ID!
  isVerified: Boolean!
  isMain: Boolean!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  user: User
  phone: Phone
  creator: User
  updater: User
}

type UserAddress {
  id: ID!
  userId: ID!
  addressId: ID!
  isMain: Boolean!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  user: User
  address: Address
  creator: User
  updater: User
}

type PeopleInfoResponse {
  id: ID!
  name: String!
  paternalSurname: String!
  maternalSurname: String!
  birthdate: DateTime!
  genderId: String!
}

type RoleResponse {
  id: ID!
  name: String!
}

type UserResponse {
  id: ID!
  email: String!
  peopleInfo: PeopleInfoResponse!
  role: RoleResponse!
}

type AuthResponse {
  token: ID!
  user: UserResponse!
}

type CompanyUser {
  id: ID!
  companyId: ID!
  userId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  company: Company
  user: User
  creator: User
  updater: User
}

type CodePromotionDiscountProduct {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  parameters: [Parameter!]!
  parameter(term: String!): Parameter!
  subparameters: [Subparameter!]!
  subparameter(id: ID!): Subparameter!
  peopleInfo: [PeopleInfo!]!
  personInfo(id: ID!): PeopleInfo!
  users(roles: [ValidRoles!] = []): [User!]!
  user(id: ID!): User!
  roles: [Role!]!
  role(id: ID!): Role!
  sessions: [Session!]!
  session(id: ID!): Session!
  userAvatars: [UserAvatar!]!
  userAvatar(id: ID!): UserAvatar!
  userPhones(offset: Int = 0, limit: Int = 10, search: String): [UserPhone!]!
  userPhone(id: ID!): UserPhone!
  phones: [Phone!]!
  phone(id: ID!): Phone!
  userAddresses(offset: Int = 0, limit: Int = 10, search: String): [UserAddress!]!
  userAddress(id: ID!): UserAddress!
  addresses: [Address!]!
  address(id: ID!): Address!
  revalidateToken: AuthResponse!
  companies(offset: Int = 0, limit: Int = 10, search: String): [Company!]!
  company(id: ID!): Company!
  companyLogos: [CompanyLogo!]!
  companyLogo(id: ID!): CompanyLogo!
  companyPhones: [CompanyPhone!]!
  companyPhone(id: ID!): CompanyPhone!
  companyAddresses: [CompanyAddress!]!
  companyAddress(id: ID!): CompanyAddress!
  companyCategories: [CompanyCategory!]!
  companyCategory(id: ID!): CompanyCategory!
  categories(offset: Int = 0, limit: Int = 10, search: String): [Category!]!
  category(id: ID!): Category!
  companyUsers: [CompanyUser!]!
  companyUser(id: ID!): CompanyUser!
  categoryImages: [CategoryImage!]!
  categoryImage(id: ID!): CategoryImage!
  products(offset: Int = 0, limit: Int = 10, search: String): [Product!]!
  product(id: ID!): Product!
  productImages(offset: Int = 0, limit: Int = 10, search: String): [ProductImage!]!
  productImage(id: ID!): ProductImage!
  productCategories(offset: Int = 0, limit: Int = 10, search: String): [ProductCategory!]!
  productCategory(id: ID!): ProductCategory!
  creditCards(offset: Int = 0, limit: Int = 10, search: String): [CreditCard!]!
  creditCard(id: ID!): CreditCard!
  userCreditCards(offset: Int = 0, limit: Int = 10, search: String): [UserCreditCard!]!
  userCreditCard(id: ID!): UserCreditCard!
  promotionRequests(offset: Int = 0, limit: Int = 10, search: String): [PromotionRequest!]!
  promotionRequest(id: ID!): PromotionRequest!
  promotionImages(offset: Int = 0, limit: Int = 10, search: String): [PromotionImage!]!
  promotionImage(id: ID!): PromotionImage!
  promotionTargetProducts(offset: Int = 0, limit: Int = 10, search: String): [PromotionTargetProduct!]!
  promotionTargetProduct(id: ID!): PromotionTargetProduct!
  discountProducts: [DiscountProduct!]!
  discountProduct(id: Int!): DiscountProduct!
  promotionStatus(id: ID!): PromotionStatus!
  promotionPayments(offset: Int = 0, limit: Int = 10, search: String): [PromotionPayment!]!
  promotionPayment(id: ID!): PromotionPayment!
  promotions(offset: Int = 0, limit: Int = 10, search: String): [Promotion!]!
  promotion(id: ID!): Promotion!
  codePromotionDiscountProducts: [CodePromotionDiscountProduct!]!
  codePromotionDiscountProduct(id: Int!): CodePromotionDiscountProduct!
  reviews: [Review!]!
  review(id: ID!): Review!
  comments(offset: Int = 0, limit: Int = 10, search: String): [Comment!]!
  comment(id: ID!): Comment!
  promotionReviews(offset: Int = 0, limit: Int = 10, search: String): [PromotionReview!]!
  promotionReview(id: ID!): PromotionReview!
  companyReviews(offset: Int = 0, limit: Int = 10, search: String): [CompanyReview!]!
  companyReview(id: ID!): CompanyReview!
}

enum ValidRoles {
  ADMIN
  USER
  SELLER
  COMPANY_REPRESENTATIVE
}

type Mutation {
  createParameter(createParameterInput: CreateParameterInput!): Parameter!
  updateParameter(updateParameterInput: UpdateParameterInput!): Parameter!
  deactivateParameter(id: ID!): Parameter!
  createSubparameter(createSubparameterInput: CreateSubparameterInput!): Subparameter!
  updateSubparameter(updateSubparameterInput: UpdateSubparameterInput!): Subparameter!
  deactivateSubparameter(id: ID!): Subparameter!
  createPeopleInfo(createPeopleInfoInput: CreatePeopleInfoInput!): PeopleInfo!
  updatePeopleInfo(updatePeopleInfoInput: UpdatePeopleInfoInput!): PeopleInfo!
  deactivatePeopleInfo(id: ID!): PeopleInfo!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deactivateUser(id: ID!): User!
  createRole(createRoleInput: CreateRoleInput!): Role!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  deactivateRole(id: ID!): Role!
  createUserAvatar(createUserAvatarInput: CreateUserAvatarInput!): UserAvatar!
  updateUserAvatar(updateUserAvatarInput: UpdateUserAvatarInput!): UserAvatar!
  deactivateUserAvatar(id: ID!): UserAvatar!
  createUserPhone(createUserPhoneInput: CreateUserPhoneInput!): UserPhone!
  updateUserPhone(updateUserPhoneInput: UpdateUserPhoneInput!): UserPhone!
  deactivateUserPhone(id: ID!): UserPhone!
  createPhone(createPhoneInput: CreatePhoneInput!): Phone!
  updatePhone(updatePhoneInput: UpdatePhoneInput!): Phone!
  deactivatePhone(id: ID!): Phone!
  createUserAddress(createUserAddressInput: CreateUserAddressInput!): UserAddress!
  updateUserAddress(updateUserAddressInput: UpdateUserAddressInput!): UserAddress!
  deactivateUserAddress(id: ID!): UserAddress!
  createAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(updateAddressInput: UpdateAddressInput!): Address!
  deactivateAddress(id: ID!): Address!
  createCompany(createCompanyInput: CreateCompanyInput!): Company!
  updateCompany(updateCompanyInput: UpdateCompanyInput!): Company!
  deactivateCompany(id: ID!): Company!
  createCompanyLogo(createCompanyLogoInput: CreateCompanyLogoInput!): CompanyLogo!
  updateCompanyLogo(updateCompanyLogoInput: UpdateCompanyLogoInput!): CompanyLogo!
  deactivateCompanyLogo(id: ID!): CompanyLogo!
  createCompanyPhone(createCompanyPhoneInput: CreateCompanyPhoneInput!): CompanyPhone!
  updateCompanyPhone(updateCompanyPhoneInput: UpdateCompanyPhoneInput!): CompanyPhone!
  deactivateCompanyPhone(id: ID!): CompanyPhone!
  createCompanyAddress(createCompanyAddressInput: CreateCompanyAddressInput!): CompanyAddress!
  updateCompanyAddress(updateCompanyAddressInput: UpdateCompanyAddressInput!): CompanyAddress!
  deactivateCompanyAddress(id: ID!): CompanyAddress!
  createCompanyCategory(createCompanyCategoryInput: CreateCompanyCategoryInput!): CompanyCategory!
  updateCompanyCategory(updateCompanyCategoryInput: UpdateCompanyCategoryInput!): CompanyCategory!
  deactivateCompanyCategory(id: ID!): CompanyCategory!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  deactivateCategory(id: ID!): Category!
  createCompanyUser(createCompanyUserInput: CreateCompanyUserInput!): CompanyUser!
  updateCompanyUser(updateCompanyUserInput: UpdateCompanyUserInput!): CompanyUser!
  deactivateCompanyUser(id: ID!): CompanyUser!
  createCategoryImage(createCategoryImageInput: CreateCategoryImageInput!): CategoryImage!
  updateCategoryImage(updateCategoryImageInput: UpdateCategoryImageInput!): CategoryImage!
  deactivateCategoryImage(id: ID!): CategoryImage!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  deactivateProduct(id: ID!): Product!
  createProductImage(createProductImageInput: CreateProductImageInput!): ProductImage!
  updateProductImage(updateProductImageInput: UpdateProductImageInput!): ProductImage!
  deactivateProductImage(id: ID!): ProductImage!
  createProductCategory(createProductCategoryInput: CreateProductCategoryInput!): ProductCategory!
  updateProductCategory(updateProductCategoryInput: UpdateProductCategoryInput!): ProductCategory!
  deactivateProductCategory(id: ID!): ProductCategory!
  createCreditCard(createCreditCardInput: CreateCreditCardInput!): CreditCard!
  updateCreditCard(updateCreditCardInput: UpdateCreditCardInput!): CreditCard!
  deactivateCreditCard(id: ID!): CreditCard!
  createUserCreditCard(createUserCreditCardInput: CreateUserCreditCardInput!): UserCreditCard!
  updateUserCreditCard(updateUserCreditCardInput: UpdateUserCreditCardInput!): UserCreditCard!
  deactivateUserCreditCard(id: ID!): UserCreditCard!
  createPromotionRequest(createPromotionRequestInput: CreatePromotionRequestInput!): PromotionRequest!
  updatePromotionRequest(updatePromotionRequestInput: UpdatePromotionRequestInput!): PromotionRequest!
  deactivatePromotionRequest(id: ID!): PromotionRequest!
  createPromotionImage(createPromotionImageInput: CreatePromotionImageInput!): PromotionImage!
  updatePromotionImage(updatePromotionImageInput: UpdatePromotionImageInput!): PromotionImage!
  deactivatePromotionImage(id: ID!): PromotionImage!
  createPromotionTargetProduct(createPromotionTargetProductInput: CreatePromotionTargetProductInput!): PromotionTargetProduct!
  updatePromotionTargetProduct(updatePromotionTargetProductInput: UpdatePromotionTargetProductInput!): PromotionTargetProduct!
  deactivatePromotionTargetProduct(id: ID!): PromotionTargetProduct!
  createDiscountProduct(createDiscountProductInput: CreateDiscountProductInput!): DiscountProduct!
  updateDiscountProduct(updateDiscountProductInput: UpdateDiscountProductInput!): DiscountProduct!
  removeDiscountProduct(id: Int!): DiscountProduct!
  createPromotionStatus(createPromotionStatusInput: CreatePromotionStatusInput!): PromotionStatus!
  updatePromotionStatus(updatePromotionStatusInput: UpdatePromotionStatusInput!): PromotionStatus!
  approvePromotionStatus(statusUpdatePromotionStatusInput: StatusUpdatePromotionStatusInput!): PromotionStatus!
  rejectPromotionStatus(statusUpdatePromotionStatusInput: StatusUpdatePromotionStatusInput!): PromotionStatus!
  deactivatePromotionStatus(id: ID!): PromotionStatus!
  createPromotionPayment(createPromotionPaymentInput: CreatePromotionPaymentInput!): PromotionPayment!
  updatePromotionPayment(updatePromotionPaymentInput: UpdatePromotionPaymentInput!): PromotionPayment!
  deactivatePromotionPayment(id: ID!): PromotionPayment!
  createPromotion(createPromotionInput: CreatePromotionInput!): Promotion!
  updatePromotion(updatePromotionInput: UpdatePromotionInput!): Promotion!
  deactivatePromotion(id: ID!): Promotion!
  createCodePromotionDiscountProduct(createCodePromotionDiscountProductInput: CreateCodePromotionDiscountProductInput!): CodePromotionDiscountProduct!
  updateCodePromotionDiscountProduct(updateCodePromotionDiscountProductInput: UpdateCodePromotionDiscountProductInput!): CodePromotionDiscountProduct!
  removeCodePromotionDiscountProduct(id: Int!): CodePromotionDiscountProduct!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  deactivateComment(id: ID!): Comment!
  createPromotionReview(createPromotionReviewInput: CreatePromotionReviewInput!): PromotionReview!
  updatePromotionReview(updatePromotionReviewInput: UpdatePromotionReviewInput!): PromotionReview!
  deactivatePromotionReview(id: ID!): PromotionReview!
  createCompanyReview(createCompanyReviewInput: CreateCompanyReviewInput!): CompanyReview!
  updateCompanyReview(updateCompanyReviewInput: UpdateCompanyReviewInput!): CompanyReview!
  deactivateCompanyReview(id: ID!): CompanyReview!

  """Seed database"""
  seed: Boolean!
}

input CreateParameterInput {
  """Parameter name"""
  name: String!

  """Parameter description"""
  description: String!
}

input UpdateParameterInput {
  """Parameter name"""
  name: String

  """Parameter description"""
  description: String
  id: ID!
  status: Boolean
}

input CreateSubparameterInput {
  """The name of the subparameter"""
  name: String!

  """The description of the subparameter"""
  description: String!

  """The parameter id of the subparameter"""
  parameterId: ID!
}

input UpdateSubparameterInput {
  """The name of the subparameter"""
  name: String

  """The description of the subparameter"""
  description: String

  """The parameter id of the subparameter"""
  parameterId: ID
  id: ID!
  status: Boolean!
}

input CreatePeopleInfoInput {
  name: String!
  paternalSurname: String!
  maternalSurname: String!
  documentTypeId: ID
  documentNumber: String
  birthdate: DateTime!
  genderId: ID!
}

input UpdatePeopleInfoInput {
  name: String
  paternalSurname: String
  maternalSurname: String
  documentTypeId: ID
  documentNumber: String
  birthdate: DateTime
  genderId: ID
  id: ID!
  status: Boolean

  """PeopleInfo updater"""
  updatedBy: ID
}

input CreateUserInput {
  peopleInfoId: ID!
  roleId: ID!
  email: String!
  password: String!
  googleId: String
}

input UpdateUserInput {
  peopleInfoId: ID
  roleId: ID
  email: String
  password: String
  googleId: String
  id: ID!
  isVerifiedEmail: Boolean
  status: Boolean
}

input CreateRoleInput {
  name: String!
}

input UpdateRoleInput {
  name: String
  id: ID!
  status: Boolean
}

input CreateUserAvatarInput {
  userId: ID!
  url: String!
}

input UpdateUserAvatarInput {
  userId: ID
  url: String
  id: ID!
  isMain: Boolean
  status: Boolean
}

input CreateUserPhoneInput {
  userId: ID!
  phoneId: ID!
}

input UpdateUserPhoneInput {
  userId: ID
  phoneId: ID
  id: ID!
  isVerified: Boolean
  isMain: Boolean
  status: Boolean
}

input CreatePhoneInput {
  phoneTypeId: ID!
  number: String!
}

input UpdatePhoneInput {
  phoneTypeId: ID
  number: String
  id: ID!
  status: Boolean
}

input CreateUserAddressInput {
  userId: ID!
  addressId: ID!
}

input UpdateUserAddressInput {
  userId: ID
  addressId: ID
  id: ID!
  isMain: Boolean
  status: Boolean
}

input CreateAddressInput {
  street: String
  city: String!
  state: String!
  country: String!
  zipCode: String
}

input UpdateAddressInput {
  street: String
  city: String
  state: String
  country: String
  zipCode: String
  id: ID!
  status: Boolean
}

input CreateCompanyInput {
  name: String!
  description: String!
  companyTypeId: ID!
  documentTypeId: ID
  documentNumber: String
  website: String
  email: String
  foundedAt: DateTime
}

input UpdateCompanyInput {
  name: String
  description: String
  companyTypeId: ID
  documentTypeId: ID
  documentNumber: String
  website: String
  email: String
  foundedAt: DateTime
  id: ID!
  status: Boolean
}

input CreateCompanyLogoInput {
  companyId: ID!
  url: String!
  alt: String!
}

input UpdateCompanyLogoInput {
  companyId: ID
  url: String
  alt: String
  id: ID!
  isMain: Boolean
  status: Boolean
}

input CreateCompanyPhoneInput {
  companyId: ID!
  phoneId: ID!
}

input UpdateCompanyPhoneInput {
  companyId: ID
  phoneId: ID
  id: ID!
  status: Boolean
}

input CreateCompanyAddressInput {
  companyId: ID!
  addressId: ID!
  name: String!
  description: String!
}

input UpdateCompanyAddressInput {
  companyId: ID
  addressId: ID
  name: String
  description: String
  id: ID!
  status: Boolean
}

input CreateCompanyCategoryInput {
  companyId: ID!
  categoryId: ID!
}

input UpdateCompanyCategoryInput {
  companyId: ID
  categoryId: ID
  id: ID!
  status: Boolean
}

input CreateCategoryInput {
  name: String!
  description: String!
  order: Int!
  parentId: ID
}

input UpdateCategoryInput {
  name: String
  description: String
  order: Int
  parentId: ID
  id: ID!
  status: Boolean
}

input CreateCompanyUserInput {
  companyId: ID!
  userId: ID!
}

input UpdateCompanyUserInput {
  companyId: ID
  userId: ID
  id: ID!
  status: Boolean
}

input CreateCategoryImageInput {
  categoryId: ID!
  url: String!

  """Image description text"""
  alt: String!
}

input UpdateCategoryImageInput {
  categoryId: ID
  url: String

  """Image description text"""
  alt: String
  id: ID!
  isMain: Boolean
  status: Boolean
}

input CreateProductInput {
  name: String!
  description: String!
  companyId: ID!
  productTypeId: ID!
  stock: Int!
  price: Float!
  code: String!
  notes: String!
}

input UpdateProductInput {
  name: String
  description: String
  companyId: ID
  productTypeId: ID
  stock: Int
  price: Float
  code: String
  notes: String
  id: ID!
  status: Boolean
}

input CreateProductImageInput {
  productId: ID!
  url: String!
  alt: String!
}

input UpdateProductImageInput {
  productId: ID
  url: String
  alt: String
  id: ID!
  status: Boolean
}

input CreateProductCategoryInput {
  productId: ID!
  categoryId: ID!
}

input UpdateProductCategoryInput {
  productId: ID
  categoryId: ID
  id: ID!
  status: Boolean
}

input CreateCreditCardInput {
  creditCardTypeId: ID!
  number: String!
  expMonth: String!
  expYear: String!
  cvv: String!
}

input UpdateCreditCardInput {
  creditCardTypeId: ID
  number: String
  expMonth: String
  expYear: String
  cvv: String
  id: ID!
  status: Boolean!
}

input CreateUserCreditCardInput {
  userId: ID!
  creditCardId: ID!
}

input UpdateUserCreditCardInput {
  userId: ID
  creditCardId: ID
  id: ID!
  status: Boolean
}

input CreatePromotionRequestInput {
  companyId: ID!
  title: String!
  code: String!
  description: String!
  promotionTypeId: ID!
  reason: String!
  comment: String!
  promotionStartAt: DateTime!
  promotionEndAt: DateTime!
  inversionAmount: Float!
  currencyId: ID!
}

input UpdatePromotionRequestInput {
  companyId: ID
  title: String
  code: String
  description: String
  promotionTypeId: ID
  reason: String
  comment: String
  promotionStartAt: DateTime
  promotionEndAt: DateTime
  inversionAmount: Float
  currencyId: ID
  id: ID!
  status: Boolean
}

input CreatePromotionImageInput {
  promotionRequestId: ID!
  url: String!
  alt: String!
}

input UpdatePromotionImageInput {
  promotionRequestId: ID
  url: String
  alt: String
  id: ID!
  status: Boolean
}

input CreatePromotionTargetProductInput {
  promotionRequestId: ID!
  productId: ID!
  description: String!
}

input UpdatePromotionTargetProductInput {
  promotionRequestId: ID
  productId: ID
  description: String
  id: ID!
  status: Boolean
}

input CreateDiscountProductInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateDiscountProductInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreatePromotionStatusInput {
  promotionRequestId: ID!
}

input UpdatePromotionStatusInput {
  promotionRequestId: ID
  id: Int!
  adminApprovedStatus: Boolean
  adminRejectedStatus: Boolean!
  adminComment: String!
  adminReason: String!
  status: Boolean
}

input StatusUpdatePromotionStatusInput {
  id: Int!
  adminComment: String!
  adminReason: String!
}

input CreatePromotionPaymentInput {
  promotionRequestId: ID!
  paymentMethodId: ID!
  amount: Float
  creditCardId: ID
  voucher: String
  paymentDate: DateTime
}

input UpdatePromotionPaymentInput {
  promotionRequestId: ID
  paymentMethodId: ID
  amount: Float
  creditCardId: ID
  voucher: String
  paymentDate: DateTime
  id: ID!
  status: Boolean
}

input CreatePromotionInput {
  userId: ID!
  companyId: ID!
  promotionPaymentId: ID!
  promotionRequestId: ID!
  title: String!
  code: String!
  description: String!
  promotionTypeId: ID!
  reason: String!
  comment: String!
  promotionStartAt: DateTime!
  promotionEndAt: DateTime!
}

input UpdatePromotionInput {
  userId: ID
  companyId: ID
  promotionPaymentId: ID
  promotionRequestId: ID
  title: String
  code: String
  description: String
  promotionTypeId: ID
  reason: String
  comment: String
  promotionStartAt: DateTime
  promotionEndAt: DateTime
  id: ID!
  status: Boolean
}

input CreateCodePromotionDiscountProductInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCodePromotionDiscountProductInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCommentInput {
  reviewId: ID!
  comment: String!
}

input UpdateCommentInput {
  id: ID!
  comment: String!
}

input CreatePromotionReviewInput {
  promotionId: ID!
  review: String!
  rating: Int!
}

input UpdatePromotionReviewInput {
  id: ID!
  review: ID!
}

input CreateCompanyReviewInput {
  companyId: ID!
  review: String!
  rating: Int!
}

input UpdateCompanyReviewInput {
  companyId: ID
  review: String!
  rating: Int
  id: ID!
}