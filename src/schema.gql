# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: ID!
  name: String!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  users: [User!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Session {
  id: ID!
  userId: ID!
  token: String!
  ipAddress: String!
  userAgent: String!
  startedAt: DateTime!
  endedAt: DateTime
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  user: User
}

type UserAvatar {
  id: ID!
  userId: ID!
  url: String!
  isMain: Boolean!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  user: User
}

type User {
  id: ID!
  peopleInfoId: ID!
  roleId: ID!
  email: String!
  isVerifiedEmail: Boolean!
  googleId: String
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  peopleInfo: PeopleInfo
  role: Role
  sessions: [Session!]
  avatars: [UserAvatar!]
}

type PeopleInfo {
  id: ID!
  name: String!
  paternalSurname: String!
  maternalSurname: String!
  documentTypeId: ID
  documentNumber: String
  birthdate: DateTime!
  genderId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  documentType: Subparameter
  gender: Subparameter!
  users: [User!]!
}

type Subparameter {
  id: ID!
  name: String!
  description: String!
  parameterId: ID!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  parameter: Parameter!
  peopleInfoDocumentType: [PeopleInfo!]!
  peopleInfoGender: [PeopleInfo!]!
}

type Parameter {
  id: ID!
  name: String!
  description: String!
  status: Boolean!
  createdAt: DateTime!
  createdBy: ID
  updatedAt: DateTime!
  updatedBy: ID
  creator: User
  updater: User
  subparameters: [Subparameter!]!
}

type PeopleInfoResponse {
  id: ID!
  name: String!
  paternalSurname: String!
  maternalSurname: String!
  birthdate: DateTime!
  genderId: String!
}

type RoleResponse {
  id: ID!
  name: String!
}

type UserResponse {
  id: ID!
  email: String!
  peopleInfo: PeopleInfoResponse!
  role: RoleResponse!
}

type AuthResponse {
  token: ID!
  user: UserResponse!
}

type Query {
  parameters: [Parameter!]!
  parameter(term: String!): Parameter!
  subparameters: [Subparameter!]!
  subparameter(id: ID!): Subparameter!
  peopleInfo: [PeopleInfo!]!
  personInfo(id: ID!): PeopleInfo!
  users(roles: [ValidRoles!] = []): [User!]!
  user(id: ID!): User!
  roles: [Role!]!
  role(id: ID!): Role!
  userAvatars: [UserAvatar!]!
  userAvatar(id: ID!): UserAvatar!
  sessions: [Session!]!
  session(id: ID!): Session!
  revalidateToken: AuthResponse!
}

enum ValidRoles {
  ADMIN
  USER
}

type Mutation {
  createParameter(createParameterInput: CreateParameterInput!): Parameter!
  updateParameter(updateParameterInput: UpdateParameterInput!): Parameter!
  deactivateParameter(id: ID!): Parameter!
  createSubparameter(createSubparameterInput: CreateSubparameterInput!): Subparameter!
  updateSubparameter(updateSubparameterInput: UpdateSubparameterInput!): Subparameter!
  deactivateSubparameter(id: ID!): Subparameter!
  createPeopleInfo(createPeopleInfoInput: CreatePeopleInfoInput!): PeopleInfo!
  updatePeopleInfo(updatePeopleInfoInput: UpdatePeopleInfoInput!): PeopleInfo!
  deactivatePeopleInfo(id: ID!): PeopleInfo!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deactivateUser(id: ID!): User!
  createRole(createRoleInput: CreateRoleInput!): Role!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  deactivateRole(id: ID!): Role!
  createUserAvatar(createUserAvatarInput: CreateUserAvatarInput!): UserAvatar!
  updateUserAvatar(updateUserAvatarInput: UpdateUserAvatarInput!): UserAvatar!
  deactivateUserAvatar(id: ID!): UserAvatar!
}

input CreateParameterInput {
  """Parameter name"""
  name: String!

  """Parameter description"""
  description: String!

  """Parameter creator"""
  createdBy: ID
}

input UpdateParameterInput {
  """Parameter name"""
  name: String

  """Parameter description"""
  description: String

  """Parameter creator"""
  createdBy: ID
  id: ID!
  status: Boolean

  """Parameter updater"""
  updatedBy: ID
}

input CreateSubparameterInput {
  """The name of the subparameter"""
  name: String!

  """The description of the subparameter"""
  description: String!

  """The parameter id of the subparameter"""
  parameterId: ID!

  """The subparameter creator"""
  createdBy: ID
}

input UpdateSubparameterInput {
  """The name of the subparameter"""
  name: String

  """The description of the subparameter"""
  description: String

  """The parameter id of the subparameter"""
  parameterId: ID

  """The subparameter creator"""
  createdBy: ID
  id: ID!

  """Subparameter updater"""
  updatedBy: ID
}

input CreatePeopleInfoInput {
  name: String!
  paternalSurname: String!
  maternalSurname: String!
  documentTypeId: ID
  documentNumber: String
  birthdate: DateTime!
  genderId: ID!
  createdBy: ID
}

input UpdatePeopleInfoInput {
  name: String
  paternalSurname: String
  maternalSurname: String
  documentTypeId: ID
  documentNumber: String
  birthdate: DateTime
  genderId: ID
  createdBy: ID
  id: ID!
  status: Boolean

  """PeopleInfo updater"""
  updatedBy: ID
}

input CreateUserInput {
  peopleInfoId: ID!
  roleId: ID!
  email: String!
  password: String!
  googleId: String
  createdBy: ID
}

input UpdateUserInput {
  peopleInfoId: ID
  roleId: ID
  email: String
  password: String
  googleId: String
  createdBy: ID
  id: ID!
  status: Boolean
  isVerifiedEmail: Boolean
}

input CreateRoleInput {
  name: String!
  createdBy: ID
}

input UpdateRoleInput {
  name: String
  createdBy: ID
  id: ID!
  status: Boolean

  """The user who updated this role"""
  updatedBy: ID
}

input CreateUserAvatarInput {
  userId: ID!
  url: String!
}

input UpdateUserAvatarInput {
  userId: ID
  url: String
  id: ID!
  isMain: Boolean
  status: Boolean
}